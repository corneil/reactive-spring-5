buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    // exclude Reactor Netty
    if (webServer != 'Default') {
        compile.exclude module: 'spring-boot-starter-tomcat'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8

dependencies {
    compile project(':model')
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb'
    compile 'org.springframework.boot:spring-boot-starter-web'
    if (webServer == 'Jetty') {
        compile 'org.springframework.boot:spring-boot-starter-jetty'
        runtime 'org.eclipse.jetty:jetty-alpn-conscrypt-server'
        runtime 'org.eclipse.jetty.http2:http2-server'
    } else if(webServer == 'Undertow') {
        compile 'org.springframework.boot:spring-boot-starter-undertow'
    }

    compile 'org.slf4j:slf4j-ext'
    testCompile 'joda-time:joda-time'
    compileOnly 'org.projectlombok:lombok'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.projectlombok:lombok'
}

test {
    include '**/*Test.java', '**/*Tests.java'
}
